1)
#include <iostream>
#include <cmath>
using namespace std;

int main() {
    
    float x, y, z;
    float T = 7;
    
    
    x = (T * 7 + 3 * 6) / 2 - 1;
    
    
    y = 2 % 2 + 2 * 2 / 2;
    
    
    z = (3 * 8 * 9 * (3 + (9 * 3 / 3)));

    
    cout << "Valor de x: " << x << endl;
    cout << "Valor de y: " << y << endl;
    cout << "Valor de z: " << z << endl;

    return 0;
}

2)
#include <iostream>
using namespace std;

int main() {
    
    float num1, num2;
    
    
    cout << "Digite o primeiro número: ";
    cin >> num1;
    
    cout << "Digite o segundo número: ";
    cin >> num2;
    
    
    float soma = num1 + num2;
    float produto = num1 * num2;
    float diferenca = num1 - num2;
    float quociente;

    
    if (num2 != 0) {
        quociente = num1 / num2;
    } else {
        cout << "Divisão por zero não é permitida." << endl;
        return 1; 
    }

    
    cout << "Soma: " << soma << endl;
    cout << "Produto: " << produto << endl;
    cout << "Diferença: " << diferenca << endl;
    cout << "Quociente: " << quociente << endl;

    return 0; 
}

3)
#include <iostream>
using namespace std;

int main() {
    
    float raio, diametro, area;
    const float pi = 3.14159;

  
    cout << "Digite o raio do circulo: ";
    cin >> raio;

    diametro = 2 * raio;

    
    area = pi * raio * raio;


    cout << "O diametro da circunferencia e: " << diametro << endl;
    cout << "A area do circulo e: " << area << endl;

    return 0
4)
#include <iostream>
using namespace std;

int main() {
    
    cout << "Quadrado:\n";
    for (int i = 0; i < 5; ++i) {
        for (int j = 0; j < 5; ++j) {
            cout << "* ";
        }
        cout << endl;
    }
    
    
    cout << "\nCirculo Oval:\n";
    for (int i = 0; i < 5; ++i) {
        cout << " *";
        for (int j = 0; j < 7; ++j) {
            cout << "  ";
        }
        cout << "*\n";
    }
    for (int j = 0; j < 13; ++j) {
        cout << " *";
    }
    cout << endl;

    
    cout << "\nSeta:\n";
    cout << "  *  \n";
    cout << " *** \n";
    cout << "
5)
#include <iostream>

using namespace std;

int main() {
    float largura, comprimento;

    
    cout << "Digite a largura da sala (em metros): ";
    cin >> largura;

    
    cout << "Digite o comprimento da sala (em metros): ";
    cin >> comprimento;

    
    float area = largura * comprimento;

    
    cout << "A área da sala é: " << area << " metros quadrados." << endl;

    return 0;
}
6)
#include <iostream>

using namespace std;

int main() {
    int num1, num2;

    cout << "Digite o primeiro número inteiro: ";
    cin >> num1;

    cout << "Digite o segundo número inteiro: ";
    cin >> num2;
    if (num2 != 0 && num1 % num2 == 0) {
        cout << num1 << " é múltiplo de " << num2 << endl;
    } else {
        cout << num1 << " não é múltiplo de " << num2 << endl;
    }

    return 0;
}
7)
#include <iostream>

using namespace std;

int main() {
    int numero;
    bool ehPrimo = true;

    cout << "Digite um número inteiro positivo maior que 1: ";
    cin >> numero;

    if (numero <= 1) {
        cout << "O número deve ser maior que 1." << endl;
        return 0;
    }


    for (int i = 2; i <= numero / 2; ++i) {
        if (numero % i == 0) {
            ehPrimo = false;
            break;
        }
    }
    if (ehPrimo) {
        cout << numero << " é um número primo." << endl;
    } else {
        cout << numero << " não é um número primo." << endl;
    }

    return 0;
}
8)
#include <iostream>
#include <cmath> 

using namespace std;

int main() {
    float cateto1, cateto2;

   
    cout << "Digite o valor do primeiro cateto: ";
    cin >> cateto1;

    cout << "Digite o valor do segundo cateto: ";
    cin >> cateto2;

    float hipotenusa = sqrt(cateto1 * cateto1 + cateto2 * cateto2);

    cout << "A hipotenusa é: " << hipotenusa << endl;

    return 0;
}
9)
#include <iostream>

using namespace std;

int main() {
    float distancia_km;
    float valor_total;
    float custo_medio;

    cout << "Digite a distância em quilômetros: ";
    cin >> distancia_km;


    if (distancia_km <= 50) {
        valor_total = distancia_km * 1.75;
    } else if (distancia_km <= 100) {
        valor_total = 50 * 1.75 + (distancia_km - 50) * 1.65;
    } else {
        valor_total = 50 * 1.75 + 50 * 1.65 + (distancia_km - 100) * 1.50;
    }


    custo_medio = valor_total / distancia_km;


    cout << "O valor total a pagar é: R$" << valor_total << endl;
    cout << "O custo médio por quilômetro é: R$" << custo_medio << endl;

    return 0;
}
10)
#include <iostream>
#include <string>
#include <algorithm>

using namespace std;

int main() {
    string inputString;
    int countVowels[5] = {0}; // Um contador para cada vogal
    char vowels[5] = {'a', 'e', 'i', 'o', 'u'};

    // Solicita ao usuário que digite uma string com 5 caracteres
    cout << "Digite uma string com 5 caracteres: ";
    getline(cin, inputString);

    // Verifica a ocorrência de vogais na string
    for (char c : inputString) {
        switch (tolower(c)) {
            case 'a':
                countVowels[0]++;
                break;
            case 'e':
                countVowels[1]++;
                break;
            case 'i':
                countVowels[2]++;
                break;
            case 'o':
                countVowels[3]++;
                break;
            case 'u':
                countVowels[4]++;
                break;
        }
    }

    // Exibe quantas vezes cada vogal aparece na string
    cout << "Quantidade de vezes que cada vogal aparece na string:" << endl;
    for (int i = 0; i < 5; ++i) {
        cout << vowels[i] << ": " << countVowels[i] << endl;
    }

    // Criptografando a string
    for (char &c : inputString) {
        switch (c) {
            case 'a':
                c = 'i';
                break;
            case 'e':
                c = 'o';
                break;
            case 'i':
                c = 'u';
                break;
        }
    }

    // Exibe a nova string criptografada
    cout << "A string criptografada é: " << inputString << endl;

    return 0;
}
